import pandas as pd

def getBaseINT(bases:str) -> str:

    ints = {
        "A":"1",
        "T":"2",
        "C":"3",
        "G":"4"
    }
    res = ""
    for base in bases:
        try:
            res += ints[base.upper()]
        except Exception as e:
            pass # handel the exception later
    return res

def getChromINT(chrom:str) -> str:

    ints = {"1": "1111", "2": "1112", "3": "1113", "4": "1114", "5": "1115", "6": "1116", "7": "1117", "8": "1118", "9": "1119", "10": "1120", "11": "1121", "12": "1122", "13": "1123", "14": "1124", "15": "1125", "16": "1126", "17": "1127", "18": "1128", "19": "1129", "20": "1130", "21": "1131", "22": "1132", "X": "1133", "Y": "1134", "M": "1135", "1_GL383518v1_alt": "1136", "1_GL383519v1_alt": "1137", "1_GL383520v2_alt": "1138", "1_KI270759v1_alt": "1139", "1_KI270760v1_alt": "1140", "1_KI270761v1_alt": "1141", "1_KI270762v1_alt": "1142", "1_KI270763v1_alt": "1143", "1_KI270764v1_alt": "1144", "1_KI270765v1_alt": "1145", "1_KI270766v1_alt": "1146", "1_KI270892v1_alt": "1147", "1_KN196472v1_fix": "1148", "1_KN196473v1_fix": "1149", "1_KN196474v1_fix": "1150", "1_KN538360v1_fix": "1151", "1_KN538361v1_fix": "1152", "1_KQ031383v1_fix": "1153", "1_KQ458382v1_alt": "1154", "1_KQ458383v1_alt": "1155", "1_KQ458384v1_alt": "1156", "1_KQ983255v1_alt": "1157", "1_KV880763v1_alt": "1158", "1_KZ208904v1_alt": "1159", "1_KZ208905v1_alt": "1160", "1_KZ208906v1_fix": "1161", "1_KZ559100v1_fix": "1162", "1_MU273330v1_alt": "1163", "1_MU273331v1_alt": "1164", "1_MU273332v1_alt": "1165", "1_MU273333v1_fix": "1166", "1_MU273334v1_fix": "1167", "1_MU273335v1_fix": "1168", "1_MU273336v1_fix": "1169", "1_KI270706v1_random": "1170", "1_KI270707v1_random": "1171", "1_KI270708v1_random": "1172", "1_KI270709v1_random": "1173", "1_KI270710v1_random": "1174", "1_KI270711v1_random": "1175", "1_KI270712v1_random": "1176", "1_KI270713v1_random": "1177", "1_KI270714v1_random": "1178", "2_GL383521v1_alt": "1179", "2_GL383522v1_alt": "1180", "2_GL582966v2_alt": "1181", "2_KI270767v1_alt": "1182", "2_KI270768v1_alt": "1183", "2_KI270769v1_alt": "1184", "2_KI270770v1_alt": "1185", "2_KI270771v1_alt": "1186", "2_KI270772v1_alt": "1187", "2_KI270773v1_alt": "1188", "2_KI270774v1_alt": "1189", "2_KI270775v1_alt": "1190", "2_KI270776v1_alt": "1191", "2_KI270893v1_alt": "1192", "2_KI270894v1_alt": "1193", "2_KN538362v1_fix": "1194", "2_KN538363v1_fix": "1195", "2_KQ031384v1_fix": "1196", "2_KQ983256v1_alt": "1197", "2_KZ208907v1_alt": "1198", "2_KZ208908v1_alt": "1199", "2_ML143341v1_fix": "1200", "2_ML143342v1_fix": "1201", "2_MU273337v1_alt": "1202", "2_MU273338v1_alt": "1203", "2_MU273339v1_alt": "1204", "2_MU273340v1_alt": "1205", "2_MU273341v1_fix": "1206", "2_MU273342v1_fix": "1207", "2_MU273343v1_fix": "1208", "2_MU273344v1_fix": "1209", "2_MU273345v1_fix": "1210", "2_KI270715v1_random": "1211", "2_KI270716v1_random": "1212", "3_GL383526v1_alt": "1213", "3_JH636055v2_alt": "1214", "3_KI270777v1_alt": "1215", "3_KI270778v1_alt": "1216", "3_KI270779v1_alt": "1217", "3_KI270780v1_alt": "1218", "3_KI270781v1_alt": "1219", "3_KI270782v1_alt": "1220", "3_KI270783v1_alt": "1221", "3_KI270784v1_alt": "1222", "3_KI270895v1_alt": "1223", "3_KI270924v1_alt": "1224", "3_KI270934v1_alt": "1225", "3_KI270935v1_alt": "1226", "3_KI270936v1_alt": "1227", "3_KI270937v1_alt": "1228", "3_KN196475v1_fix": "1229", "3_KN196476v1_fix": "1230", "3_KN538364v1_fix": "1231", "3_KQ031385v1_fix": "1232", "3_KQ031386v1_fix": "1233", "3_KV766192v1_fix": "1234", "3_KZ208909v1_alt": "1235", "3_KZ559101v1_alt": "1236", "3_KZ559102v1_alt": "1237", "3_KZ559103v1_alt": "1238", "3_KZ559104v1_fix": "1239", "3_KZ559105v1_alt": "1240", "3_ML143343v1_alt": "1241", "3_MU273346v1_fix": "1242", "3_MU273347v1_fix": "1243", "3_MU273348v1_fix": "1244", "3_GL000221v1_random": "1245", "4_GL000257v2_alt": "1246", "4_GL383527v1_alt": "1247", "4_GL383528v1_alt": "1248", "4_KI270785v1_alt": "1249", "4_KI270786v1_alt": "1250", "4_KI270787v1_alt": "1251", "4_KI270788v1_alt": "1252", "4_KI270789v1_alt": "1253", "4_KI270790v1_alt": "1254", "4_KI270896v1_alt": "1255", "4_KI270925v1_alt": "1256", "4_KQ090013v1_alt": "1257", "4_KQ090014v1_alt": "1258", "4_KQ090015v1_alt": "1259", "4_KQ983257v1_fix": "1260", "4_KQ983258v1_alt": "1261", "4_KV766193v1_alt": "1262", "4_ML143344v1_fix": "1263", "4_ML143345v1_fix": "1264", "4_ML143346v1_fix": "1265", "4_ML143347v1_fix": "1266", "4_ML143348v1_fix": "1267", "4_ML143349v1_fix": "1268", "4_MU273349v1_alt": "1269", "4_MU273350v1_fix": "1270", "4_MU273351v1_fix": "1271", "4_GL000008v2_random": "1272", "5_GL339449v2_alt": "1273", "5_GL383530v1_alt": "1274", "5_GL383531v1_alt": "1275", "5_GL383532v1_alt": "1276", "5_GL949742v1_alt": "1277", "5_KI270791v1_alt": "1278", "5_KI270792v1_alt": "1279", "5_KI270793v1_alt": "1280", "5_KI270794v1_alt": "1281", "5_KI270795v1_alt": "1282", "5_KI270796v1_alt": "1283", "5_KI270897v1_alt": "1284", "5_KI270898v1_alt": "1285", "5_KN196477v1_alt": "1286", "5_KV575243v1_alt": "1287", "5_KV575244v1_fix": "1288", "5_KZ208910v1_alt": "1289", "5_ML143350v1_fix": "1290", "5_MU273352v1_fix": "1291", "5_MU273353v1_fix": "1292", "5_MU273354v1_fix": "1293", "5_MU273355v1_fix": "1294", "5_MU273356v1_alt": "1295", "5_GL000208v1_random": "1296", "6_GL000250v2_alt": "1297", "6_GL000251v2_alt": "1298", "6_GL000252v2_alt": "1299", "6_GL000253v2_alt": "1300", "6_GL000254v2_alt": "1301", "6_GL000255v2_alt": "1302", "6_GL000256v2_alt": "1303", "6_GL383533v1_alt": "1304", "6_KB021644v2_alt": "1305", "6_KI270758v1_alt": "1306", "6_KI270797v1_alt": "1307", "6_KI270798v1_alt": "1308", "6_KI270799v1_alt": "1309", "6_KI270800v1_alt": "1310", "6_KI270801v1_alt": "1311", "6_KI270802v1_alt": "1312", "6_KN196478v1_fix": "1313", "6_KQ031387v1_fix": "1314", "6_KQ090016v1_fix": "1315", "6_KQ090017v1_alt": "1316", "6_KV766194v1_fix": "1317", "6_KZ208911v1_fix": "1318", "6_ML143351v1_fix": "1319", "6_MU273357v1_alt": "1320", "7_GL383534v2_alt": "1321", "7_KI270803v1_alt": "1322", "7_KI270804v1_alt": "1323", "7_KI270805v1_alt": "1324", "7_KI270806v1_alt": "1325", "7_KI270807v1_alt": "1326", "7_KI270808v1_alt": "1327", "7_KI270809v1_alt": "1328", "7_KI270899v1_alt": "1329", "7_KQ031388v1_fix": "1330", "7_KV880764v1_fix": "1331", "7_KV880765v1_fix": "1332", "7_KZ208912v1_fix": "1333", "7_KZ208913v1_alt": "1334", "7_KZ559106v1_alt": "1335", "7_ML143352v1_fix": "1336", "7_MU273358v1_alt": "1337", "8_KI270810v1_alt": "1338", "8_KI270811v1_alt": "1339", "8_KI270812v1_alt": "1340", "8_KI270813v1_alt": "1341", "8_KI270814v1_alt": "1342", "8_KI270815v1_alt": "1343", "8_KI270816v1_alt": "1344", "8_KI270817v1_alt": "1345", "8_KI270818v1_alt": "1346", "8_KI270819v1_alt": "1347", "8_KI270820v1_alt": "1348", "8_KI270821v1_alt": "1349", "8_KI270822v1_alt": "1350", "8_KI270900v1_alt": "1351", "8_KI270901v1_alt": "1352", "8_KI270926v1_alt": "1353", "8_KV880766v1_fix": "1354", "8_KV880767v1_fix": "1355", "8_KZ208914v1_fix": "1356", "8_KZ208915v1_fix": "1357", "8_KZ559107v1_alt": "1358", "8_MU273359v1_fix": "1359", "8_MU273360v1_fix": "1360", "8_MU273361v1_fix": "1361", "8_MU273362v1_fix": "1362", "8_MU273363v1_fix": "1363", "9_GL383539v1_alt": "1364", "9_GL383540v1_alt": "1365", "9_GL383541v1_alt": "1366", "9_GL383542v1_alt": "1367", "9_KI270823v1_alt": "1368", "9_KN196479v1_fix": "1369", "9_KQ090018v1_alt": "1370", "9_KQ090019v1_alt": "1371", "9_ML143353v1_fix": "1372", "9_MU273364v1_fix": "1373", "9_MU273365v1_fix": "1374", "9_MU273366v1_fix": "1375", "9_KI270717v1_random": "1376", "9_KI270718v1_random": "1377", "9_KI270719v1_random": "1378", "9_KI270720v1_random": "1379", "10_GL383545v1_alt": "1380", "10_GL383546v1_alt": "1381", "10_KI270824v1_alt": "1382", "10_KN196480v1_fix": "1383", "10_KN538365v1_fix": "1384", "10_KN538366v1_fix": "1385", "10_KN538367v1_fix": "1386", "10_KQ090020v1_alt": "1387", "10_KQ090021v1_fix": "1388", "10_ML143354v1_fix": "1389", "10_ML143355v1_fix": "1390", "10_MU273367v1_fix": "1391", "11_GL383547v1_alt": "1392", "11_JH159136v1_alt": "1393", "11_JH159137v1_alt": "1394", "11_KI270826v1_alt": "1395", "11_KI270827v1_alt": "1396", "11_KI270829v1_alt": "1397", "11_KI270830v1_alt": "1398", "11_KI270831v1_alt": "1399", "11_KI270832v1_alt": "1400", "11_KI270902v1_alt": "1401", "11_KI270903v1_alt": "1402", "11_KI270927v1_alt": "1403", "11_KN196481v1_fix": "1404", "11_KN538368v1_alt": "1405", "11_KQ090022v1_fix": "1406", "11_KQ759759v2_fix": "1407", "11_KV766195v1_fix": "1408", "11_KZ559108v1_fix": "1409", "11_KZ559109v1_fix": "1410", "11_KZ559110v1_alt": "1411", "11_KZ559111v1_alt": "1412", "11_ML143356v1_fix": "1413", "11_ML143357v1_fix": "1414", "11_ML143358v1_fix": "1415", "11_ML143359v1_fix": "1416", "11_ML143360v1_fix": "1417", "11_MU273368v1_alt": "1418", "11_MU273369v1_fix": "1419", "11_MU273370v1_fix": "1420", "11_MU273371v1_fix": "1421", "12_GL383549v1_alt": "1422", "12_GL383550v2_alt": "1423", "12_GL383551v1_alt": "1424", "12_GL383552v1_alt": "1425", "12_GL383553v2_alt": "1426", "12_GL877875v1_alt": "1427", "12_GL877876v1_alt": "1428", "12_KI270833v1_alt": "1429", "12_KI270834v1_alt": "1430", "12_KI270835v1_alt": "1431", "12_KI270836v1_alt": "1432", "12_KI270837v1_alt": "1433", "12_KI270904v1_alt": "1434", "12_KN196482v1_fix": "1435", "12_KN538369v1_fix": "1436", "12_KN538370v1_fix": "1437", "12_KQ090023v1_alt": "1438", "12_KQ759760v1_fix": "1439", "12_KZ208916v1_fix": "1440", "12_KZ208917v1_fix": "1441", "12_KZ208918v1_alt": "1442", "12_KZ559112v1_alt": "1443", "12_ML143361v1_fix": "1444", "12_ML143362v1_fix": "1445", "12_MU273372v1_fix": "1446", "13_KI270838v1_alt": "1447", "13_KI270839v1_alt": "1448", "13_KI270840v1_alt": "1449", "13_KI270841v1_alt": "1450", "13_KI270842v1_alt": "1451", "13_KI270843v1_alt": "1452", "13_KN196483v1_fix": "1453", "13_KN538371v1_fix": "1454", "13_KN538372v1_fix": "1455", "13_KN538373v1_fix": "1456", "13_KQ090024v1_alt": "1457", "13_KQ090025v1_alt": "1458", "13_ML143363v1_fix": "1459", "13_ML143364v1_fix": "1460", "13_ML143365v1_fix": "1461", "13_ML143366v1_fix": "1462", "14_KI270844v1_alt": "1463", "14_KI270845v1_alt": "1464", "14_KI270846v1_alt": "1465", "14_KI270847v1_alt": "1466", "14_KZ208919v1_alt": "1467", "14_KZ208920v1_fix": "1468", "14_ML143367v1_fix": "1469", "14_ML143368v1_alt": "1470", "14_MU273373v1_fix": "1471", "14_GL000009v2_random": "1472", "14_GL000194v1_random": "1473", "14_GL000225v1_random": "1474", "14_KI270722v1_random": "1475", "14_KI270723v1_random": "1476", "14_KI270724v1_random": "1477", "14_KI270725v1_random": "1478", "14_KI270726v1_random": "1479", "15_GL383554v1_alt": "1480", "15_GL383555v2_alt": "1481", "15_KI270848v1_alt": "1482", "15_KI270849v1_alt": "1483", "15_KI270850v1_alt": "1484", "15_KI270851v1_alt": "1485", "15_KI270852v1_alt": "1486", "15_KI270905v1_alt": "1487", "15_KI270906v1_alt": "1488", "15_KN538374v1_fix": "1489", "15_KQ031389v1_alt": "1490", "15_ML143369v1_fix": "1491", "15_ML143370v1_fix": "1492", "15_ML143371v1_fix": "1493", "15_ML143372v1_fix": "1494", "15_MU273374v1_fix": "1495", "15_MU273375v1_alt": "1496", "15_KI270727v1_random": "1497", "16_GL383556v1_alt": "1498", "16_GL383557v1_alt": "1499", "16_KI270853v1_alt": "1500", "16_KI270854v1_alt": "1501", "16_KI270855v1_alt": "1502", "16_KI270856v1_alt": "1503", "16_KQ031390v1_alt": "1504", "16_KQ090026v1_alt": "1505", "16_KQ090027v1_alt": "1506", "16_KV880768v1_fix": "1507", "16_KZ208921v1_alt": "1508", "16_KZ559113v1_fix": "1509", "16_ML143373v1_fix": "1510", "16_MU273376v1_fix": "1511", "16_MU273377v1_fix": "1512", "16_KI270728v1_random": "1513", "17_GL000258v2_alt": "1514", "17_GL383563v3_alt": "1515", "17_GL383564v2_alt": "1516", "17_GL383565v1_alt": "1517", "17_GL383566v1_alt": "1518", "17_JH159146v1_alt": "1519", "17_JH159147v1_alt": "1520", "17_JH159148v1_alt": "1521", "17_KI270857v1_alt": "1522", "17_KI270858v1_alt": "1523", "17_KI270859v1_alt": "1524", "17_KI270860v1_alt": "1525", "17_KI270861v1_alt": "1526", "17_KI270862v1_alt": "1527", "17_KI270907v1_alt": "1528", "17_KI270908v1_alt": "1529", "17_KI270909v1_alt": "1530", "17_KI270910v1_alt": "1531", "17_KV575245v1_fix": "1532", "17_KV766196v1_fix": "1533", "17_KV766197v1_alt": "1534", "17_KV766198v1_alt": "1535", "17_KZ559114v1_alt": "1536", "17_ML143374v1_fix": "1537", "17_ML143375v1_fix": "1538", "17_MU273378v1_alt": "1539", "17_MU273379v1_fix": "1540", "17_MU273380v1_fix": "1541", "17_MU273381v1_fix": "1542", "17_MU273382v1_fix": "1543", "17_MU273383v1_fix": "1544", "17_GL000205v2_random": "1545", "17_KI270729v1_random": "1546", "17_KI270730v1_random": "1547", "18_GL383567v1_alt": "1548", "18_GL383568v1_alt": "1549", "18_GL383569v1_alt": "1550", "18_GL383570v1_alt": "1551", "18_GL383571v1_alt": "1552", "18_GL383572v1_alt": "1553", "18_KI270863v1_alt": "1554", "18_KI270864v1_alt": "1555", "18_KI270911v1_alt": "1556", "18_KI270912v1_alt": "1557", "18_KQ090028v1_fix": "1558", "18_KQ458385v1_alt": "1559", "18_KZ208922v1_fix": "1560", "18_KZ559115v1_fix": "1561", "18_KZ559116v1_alt": "1562", "19_GL000209v2_alt": "1563", "19_GL383573v1_alt": "1564", "19_GL383574v1_alt": "1565", "19_GL383575v2_alt": "1566", "19_GL383576v1_alt": "1567", "19_GL949746v1_alt": "1568", "19_GL949747v2_alt": "1569", "19_GL949748v2_alt": "1570", "19_GL949749v2_alt": "1571", "19_GL949750v2_alt": "1572", "19_GL949751v2_alt": "1573", "19_GL949752v1_alt": "1574", "19_GL949753v2_alt": "1575", "19_KI270865v1_alt": "1576", "19_KI270866v1_alt": "1577", "19_KI270867v1_alt": "1578", "19_KI270868v1_alt": "1579", "19_KI270882v1_alt": "1580", "19_KI270883v1_alt": "1581", "19_KI270884v1_alt": "1582", "19_KI270885v1_alt": "1583", "19_KI270886v1_alt": "1584", "19_KI270887v1_alt": "1585", "19_KI270888v1_alt": "1586", "19_KI270889v1_alt": "1587", "19_KI270890v1_alt": "1588", "19_KI270891v1_alt": "1589", "19_KI270914v1_alt": "1590", "19_KI270915v1_alt": "1591", "19_KI270916v1_alt": "1592", "19_KI270917v1_alt": "1593", "19_KI270918v1_alt": "1594", "19_KI270919v1_alt": "1595", "19_KI270920v1_alt": "1596", "19_KI270921v1_alt": "1597", "19_KI270922v1_alt": "1598", "19_KI270923v1_alt": "1599", "19_KI270929v1_alt": "1600", "19_KI270930v1_alt": "1601", "19_KI270931v1_alt": "1602", "19_KI270932v1_alt": "1603", "19_KI270933v1_alt": "1604", "19_KI270938v1_alt": "1605", "19_KN196484v1_fix": "1606", "19_KQ458386v1_fix": "1607", "19_KV575246v1_alt": "1608", "19_KV575247v1_alt": "1609", "19_KV575248v1_alt": "1610", "19_KV575249v1_alt": "1611", "19_KV575250v1_alt": "1612", "19_KV575251v1_alt": "1613", "19_KV575252v1_alt": "1614", "19_KV575253v1_alt": "1615", "19_KV575254v1_alt": "1616", "19_KV575255v1_alt": "1617", "19_KV575256v1_alt": "1618", "19_KV575257v1_alt": "1619", "19_KV575258v1_alt": "1620", "19_KV575259v1_alt": "1621", "19_KV575260v1_alt": "1622", "19_ML143376v1_fix": "1623", "19_MU273384v1_fix": "1624", "19_MU273385v1_fix": "1625", "19_MU273386v1_fix": "1626", "19_MU273387v1_alt": "1627", "20_GL383577v2_alt": "1628", "20_KI270869v1_alt": "1629", "20_KI270870v1_alt": "1630", "20_KI270871v1_alt": "1631", "20_MU273388v1_fix": "1632", "20_MU273389v1_fix": "1633", "21_GL383578v2_alt": "1634", "21_GL383579v2_alt": "1635", "21_GL383580v2_alt": "1636", "21_GL383581v2_alt": "1637", "21_KI270872v1_alt": "1638", "21_KI270873v1_alt": "1639", "21_KI270874v1_alt": "1640", "21_ML143377v1_fix": "1641", "21_MU273390v1_fix": "1642", "21_MU273391v1_fix": "1643", "21_MU273392v1_fix": "1644", "22_GL383582v2_alt": "1645", "22_GL383583v2_alt": "1646", "22_KB663609v1_alt": "1647", "22_KI270875v1_alt": "1648", "22_KI270876v1_alt": "1649", "22_KI270877v1_alt": "1650", "22_KI270878v1_alt": "1651", "22_KI270879v1_alt": "1652", "22_KI270928v1_alt": "1653", "22_KN196485v1_alt": "1654", "22_KN196486v1_alt": "1655", "22_KQ458387v1_alt": "1656", "22_KQ458388v1_alt": "1657", "22_KQ759761v1_alt": "1658", "22_KQ759762v2_fix": "1659", "22_ML143378v1_fix": "1660", "22_ML143379v1_fix": "1661", "22_ML143380v1_fix": "1662", "22_KI270731v1_random": "1663", "22_KI270732v1_random": "1664", "22_KI270733v1_random": "1665", "22_KI270735v1_random": "1666", "22_KI270736v1_random": "1667", "22_KI270737v1_random": "1668", "22_KI270738v1_random": "1669", "22_KI270739v1_random": "1670", "X_KI270880v1_alt": "1671", "X_KI270881v1_alt": "1672", "X_KI270913v1_alt": "1673", "X_KV766199v1_alt": "1674", "X_ML143381v1_fix": "1675", "X_ML143382v1_fix": "1676", "X_ML143383v1_fix": "1677", "X_ML143384v1_fix": "1678", "X_ML143385v1_fix": "1679", "X_MU273393v1_fix": "1680", "X_MU273394v1_fix": "1681", "X_MU273395v1_alt": "1682", "X_MU273396v1_alt": "1683", "X_MU273397v1_alt": "1684", "Y_KI270740v1_random": "1685", "Y_KN196487v1_fix": "1686", "Y_KZ208923v1_fix": "1687", "Y_KZ208924v1_fix": "1688", "Y_MU273398v1_fix": "1689", "Un_GL000195v1": "1690", "Un_GL000213v1": "1691", "Un_GL000214v1": "1692", "Un_GL000216v2": "1693", "Un_GL000218v1": "1694", "Un_GL000219v1": "1695", "Un_GL000220v1": "1696", "Un_GL000224v1": "1697", "Un_GL000226v1": "1698", "Un_KI270302v1": "1699", "Un_KI270303v1": "1700", "Un_KI270304v1": "1701", "Un_KI270305v1": "1702", "Un_KI270310v1": "1703", "Un_KI270311v1": "1704", "Un_KI270312v1": "1705", "Un_KI270315v1": "1706", "Un_KI270316v1": "1707", "Un_KI270317v1": "1708", "Un_KI270320v1": "1709", "Un_KI270322v1": "1710", "Un_KI270329v1": "1711", "Un_KI270330v1": "1712", "Un_KI270333v1": "1713", "Un_KI270334v1": "1714", "Un_KI270335v1": "1715", "Un_KI270336v1": "1716", "Un_KI270337v1": "1717", "Un_KI270338v1": "1718", "Un_KI270340v1": "1719", "Un_KI270362v1": "1720", "Un_KI270363v1": "1721", "Un_KI270364v1": "1722", "Un_KI270366v1": "1723", "Un_KI270371v1": "1724", "Un_KI270372v1": "1725", "Un_KI270373v1": "1726", "Un_KI270374v1": "1727", "Un_KI270375v1": "1728", "Un_KI270376v1": "1729", "Un_KI270378v1": "1730", "Un_KI270379v1": "1731", "Un_KI270381v1": "1732", "Un_KI270382v1": "1733", "Un_KI270383v1": "1734", "Un_KI270384v1": "1735", "Un_KI270385v1": "1736", "Un_KI270386v1": "1737", "Un_KI270387v1": "1738", "Un_KI270388v1": "1739", "Un_KI270389v1": "1740", "Un_KI270390v1": "1741", "Un_KI270391v1": "1742", "Un_KI270392v1": "1743", "Un_KI270393v1": "1744", "Un_KI270394v1": "1745", "Un_KI270395v1": "1746", "Un_KI270396v1": "1747", "Un_KI270411v1": "1748", "Un_KI270412v1": "1749", "Un_KI270414v1": "1750", "Un_KI270417v1": "1751", "Un_KI270418v1": "1752", "Un_KI270419v1": "1753", "Un_KI270420v1": "1754", "Un_KI270422v1": "1755", "Un_KI270423v1": "1756", "Un_KI270424v1": "1757", "Un_KI270425v1": "1758", "Un_KI270429v1": "1759", "Un_KI270435v1": "1760", "Un_KI270438v1": "1761", "Un_KI270442v1": "1762", "Un_KI270448v1": "1763", "Un_KI270465v1": "1764", "Un_KI270466v1": "1765", "Un_KI270467v1": "1766", "Un_KI270468v1": "1767", "Un_KI270507v1": "1768", "Un_KI270508v1": "1769", "Un_KI270509v1": "1770", "Un_KI270510v1": "1771", "Un_KI270511v1": "1772", "Un_KI270512v1": "1773", "Un_KI270515v1": "1774", "Un_KI270516v1": "1775", "Un_KI270517v1": "1776", "Un_KI270518v1": "1777", "Un_KI270519v1": "1778", "Un_KI270521v1": "1779", "Un_KI270522v1": "1780", "Un_KI270528v1": "1781", "Un_KI270529v1": "1782", "Un_KI270530v1": "1783", "Un_KI270538v1": "1784", "Un_KI270539v1": "1785", "Un_KI270544v1": "1786", "Un_KI270548v1": "1787", "Un_KI270579v1": "1788", "Un_KI270580v1": "1789", "Un_KI270581v1": "1790", "Un_KI270582v1": "1791", "Un_KI270583v1": "1792", "Un_KI270584v1": "1793", "Un_KI270587v1": "1794", "Un_KI270588v1": "1795", "Un_KI270589v1": "1796", "Un_KI270590v1": "1797", "Un_KI270591v1": "1798", "Un_KI270593v1": "1799", "Un_KI270741v1": "1800", "Un_KI270742v1": "1801", "Un_KI270743v1": "1802", "Un_KI270744v1": "1803", "Un_KI270745v1": "1804", "Un_KI270746v1": "1805", "Un_KI270747v1": "1806", "Un_KI270748v1": "1807", "Un_KI270749v1": "1808", "Un_KI270750v1": "1809", "Un_KI270751v1": "1810", "Un_KI270753v1": "1811", "Un_KI270754v1": "1812", "Un_KI270755v1": "1813", "Un_KI270756v1": "1814", "Un_KI270757v1": "1815"}
    try:
        return ints[chrom]
    except Exception as e:
        pass # handel the exception later

def decipherVariant(chrom:str, pos:int, ref:str, alt:str) -> int:
    if chrom.startswith("chr"):
        chrom =  chrom.strip("chr")
    chrom = getChromINT(chrom=chrom)
    ref= getBaseINT(ref)
    alt = getBaseINT(alt)
    try:
        return int(chrom + str(pos) + ref + alt)
    except Exception as e:
        pass # handel the exception later


#######################

class FastaVCF:
    def __init__(self, fasta, key_file):
        self.fasta = fasta
        self.key_file = self.load_key_file(key_file)
        self.readFasta()
        

    def load_key_file(self, key_file):
        df = pd.read_csv(key_file, sep ="\t")
        return df
    
    def get_chromosome_name(self, line):

        alias = line.strip(">").split()[0]

        match = self.key_file[self.key_file["alias"] == alias]

        if not match.empty:
            return match["chr_name"].iloc[0]


    def readFasta(self):

        Alternatives = {
            "A": ["C", "G", "T"],
            "C": ["A", "G", "T"],
            "G": ["A", "C", "T"],
            "T": ["A", "C", "G"]
        }
        NCtCommon = ["A", "C", "G", "T"]
        NCtids = {
            "R": ["G", "A"],
            "Y": ["C", "T"],
            "K": ["G", "T"],
            "M": ["A", "C"],
            "S": ["G", "C"],
            "W":["A", "T"],
        }
        output = None

        # output.write(self.vcfHeader)
        with open(self.fasta) as T:
            location = 0
            chro = None

            for line in T:
                if line.startswith(">"):
                    chro = self.get_chromosome_name(line)


                    if chro:

                        outputLocations = f"Mert/DecipherVCF/All/Chr{chro}_GenomicVariants.vcf"
                        output = open(outputLocations, "w")
                        output.write("##fileformat=VCFv4.2\n")
                        output.write("##FORMAT=<ID=DP,Number=1,Type=Integer,Description='Approximate read depth (reads with MQ=255 or with bad mates are filtered)'>\n")
                        output.write("##INFO=<ID=ID,Number=A,Type=Integer,Description='Allele count in genotypes, for each ALT allele, in the same order as listed'>\n")
                        output.write("#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tGENOMICVARIANTS\n")
                    
                    
                    location = 0
                              
                else:
                   
                    for base in line.strip():
                        location += 1
                        if base in NCtCommon:
                                
                            for Alt in Alternatives[base]:
                                try:
                                    id = decipherVariant(chro, str(location), base, Alt)
                                    if id != 1:
                                        output.write(f"{'chr'+chro}\t{location}\t.\t{base}\t{Alt}\t1\t.\tID={id}\tDP\t1\n")
                                    else:
                                        print("ERROR: One variant was missed!")
                                        exit()
                                except KeyError:
                                    pass

                        elif base in NCtids:
                            for base in NCtids[base]:
                                for Alt in Alternatives[base]:
                                    try:
                                        id = decipherVariant(chro, str(location), base, Alt)
                                        if id != 1:
                                            output.write(f"{'chr'+chro}\t{location}\t.\t{base}\t{Alt}\t1\t.\tID={id}\tDP\t1\n")
                                        else:
                                            print("ERROR: One variant was missed!")
                                            exit()
                                    except KeyError:
                                        pass
        if output:
            output.close()     


if __name__ == "__main__":
    key_file = "/home/genwork2/Mert/DecipherVCF/ncbi_keys.txt"
    fasta = "/home/genwork2/Mert/DecipherVCF/GRCh38_latest_genomic.fna"
    t = FastaVCF(fasta, key_file)





